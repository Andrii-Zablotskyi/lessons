@import url("reset.css");

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@500;600;900&display=swap');

body {
	background-color: rgba(105, 133, 66, 0.9);
	color: #fff;
}
h1{
  font-family: "Inter", sans-serif;
  font-weight: 900;
  font-size: 48px;
  line-height: 1.5px;
  text-align: center;
  color: #c0b628;
  margin-bottom: 40px; 
  margin-top: 30px;
}
h2{
  font-family: "Inter", sans-serif;
  font-weight: 900;
  font-size: 48px;
  line-height: 1.5px;
  text-align: center;
  color: #c0b628;
  margin-top: 50px;
  margin-bottom: 40px;
}
.wrapper {
	max-width: 1400px;
    margin: 0 auto ;
    padding: 60px;
    background-color: #3d817c;
    border-radius: 10px;
    border: 4px solid #603e80;
}

/* .content {
	padding: 30px 3%;
} */
.content__block {
	margin: 0px 20px 10px 0px;
	display: inline-block;
}

/*
За допомогою 2D та 3D трансформації 
ми зможемо зрушувати, повертати, масштабувати 
елементи та робити багато іншого!
Задається трансформація властивістю
transform та її значеннями

transform: функція(ї)-значення властивості;

При вказанні відсоткових значень, 
відсоток вираховується від розмірів самого об'єкту
x - від ширини, y - від висоти

При використанні transform, об'єкт стає ближче (вище)
по осі z. Тобто накриє собою інші об'єкти без влатстивості 
transform та position. Стає на передній план.

!!!!! НЕ ПРАЦЮЄ з рядковими об'єктами !!!!!!!!
*/

/* 2D */
.content__2D .content__wrapper {
	width: 150px;
	height: 150px;
	background-color: rgba(255, 255, 255, 0.1);
	perspective-origin: center;
	perspective: 300px;
	border-radius:10px;
}
.content__2D .content__block div {
	display: flex;
	text-transform: uppercase;
	justify-content: center;
	align-items: center;
	letter-spacing: 1px;
	text-align: center;
	width: 150px;
	height: 150px;
	transition: all 0.5s ease 0s;
	border-radius:10px;
}

/*
translate (x, y)
Зміщує елемент на нове місце,
переміщаючи відносно початкового 
положення об'єкта вправо та вниз,
використовуючи координати X та Y. 
Записується так translate (x,y).
*/
.content__translate {
	background-color: #85444e;
}
.content__translate:hover {
	/* transform: translate(20px, 30px); */
	transform: translate(15%, 20%);
	/* transform: translateY(10px); */
	/* transform: translateX(10px); */
}

/*  
Scale (x, y)
Масштабує елементи,
роблячи їх більшими або меншими.
1 - це початковий розмір об'єкту
*/
.content__scale {
	/* Дзеркало */
	/* transform: scale(-1, 1); */
	transform: scale(1);
	background-color: #634183;
}
.content__scale:hover {
	transform: scale(1.5);
}
/*   
Rotate (n + deg)
Повертає елементи.
*/
.content__rotate {
	transform: rotate(0deg);
	/* transform: rotateX(); */
	/* transform: rotateY(); */
	background-color: #57833f;
}
.content__rotate:hover {
	transform: rotate(+360deg);
	background-color: #45578a;
	color: #adaf23a4;
}
/* 
Skew (x + deg, y + deg)
Деформує (нахиляє) елементи.
*/
.content__skew {
	transform: skew(0deg, 0deg);
	/* transform: skewX(35deg); */
	/* transform: skewY(35deg); */
	background-color: #864278;
}
.content__skew:hover {
	transform: skew(20deg, 0deg);
}
/* 
Matrix (a, c, b, d, x, y)
Дозволяє об'єднати кілька функцій 2D-трансформацій в одній.
*/
.content__matrix {
	transform: matrix(1, 0, 0, 1, 0, 0);
	background-color: #633f85;
}
.content__matrix:hover {
	transform: matrix(1.5, 0, 0, 2, 50, 0);
	background-color: #5a3979;
	color: #457786;
}
/* 
Множинні 2D трансформації 
значення розділяються пробілом
*/
.content__multi {
	background-color: #1796b6;
	padding-top: 32px;
}
.content__multi:hover {
	background-color: #4e703a;
	transform: translate(50px, 50px) scale(0.5) rotate(45deg);
}
/*
Transform-origin
Дозволяє змістити центр трансформації,
щодо якого відбувається зміна 
положення/розміру/форми елемента.
transform-origin: 50% 50%;
transform-origin: 50%;
transform-origin: center;
*/
.content__transform-origin {
	background-color: #6e4135;
	transform-origin: 0px 0px;
	transform: rotate(0deg);
	padding-top: 15px;
}
.content__transform-origin:hover {
	transform: rotate(-50deg);
	/* transform: scale(2); */
}

/* 3D */

/*  
Perspective,
perspective-origin
Встановлення глибини та зміна 
точки початку координат.
!! Задаються батьківському елементу!
perspective-origin: center (за замевченням)
perspective - не можна вказати у відсотках
*/
.content__3D .content__wrapper3d {
	width: 150px;
	height: 150px;
	background-color: rgba(255, 255, 255, 0.1);
	perspective-origin: center;
	perspective: 300px;
	border-radius:10px;
}

.content__3D .content__wrapper3d div {
	display: flex;
	text-transform: uppercase;
	justify-content: center;
	align-items: center;
	letter-spacing: 1px;
	text-align: center;
	transition: all 0.8s ease 0s;
	width: 150px;
	height: 150px;
	border-radius:10px;
}

.content__perspective {
	background-color: #4d7537;
padding-top: 32px;
}
.content__perspective:hover {
background-color: #4d7537;
	transform: rotateX(50deg);
}

/* translate3D 
За аналогією зі своїм 2D братом,
це значення визначає переміщення елемента,
але в 3D-просторі. Крім осі X та Y 
додається вісь Z.
!! вісь Z працює лише з перспективою (perspective)
*/
.content__translate3D {
	transform: translate3D(0px, 0px, 0);
	background-color: #744438;
}
.content__translate3D:hover {
	transform: translate3D(40px, 40px, 100px);
	
}

/* scale3D */
.content__scale3D {
	transform: scale3d(1, 1, 1);
	background-color: #53376e;
}
.content__scale3D:hover {
	transform: scale3d(2, 2, 2);
}

/* rotate3D  */
.content__rotate3d {
	transform: rotate3d(1, 1, 1, 0deg);
	background-color: #6a7034;
}
.content__rotate3d:hover {
	transform: rotate3d(1, 1, 1, 360deg);
}

/* matrix3d */

/* Multi3D */
.content__multi3d {
	background-color: #704337;
	/* transform: translate3d(20px, 20px, 20px) rotate3d(1, 1, 1, 20deg); */
	padding-top: 16px;
}
.content__multi3d:hover {
	background-color: #704337;
	transform: translate3d(20px, 20px, 20px) rotate3d(1, 1, 1, 20deg);
	padding-top: 16px;
}

/*
Transform-style
Визначає, як дочірні елементи мають відображатися у 3D-просторі.
!!! Задається батьківському елементу разом з perspective!
transform-style: flat; - за замовченням
*/
.content__transform-style-wrapper {
	width: 150px;
	height: 150px;
	background-color: rgba(255, 255, 255, 0.1);
	perspective: 400px;
	transform-style: preserve-3d;
	border-radius:10px;
}
.content__transform-style {
	display: flex;
	text-transform: uppercase;
	justify-content: center;
	align-items: center;
	letter-spacing: 1px;
	text-align: center;
	transition: all 0.8s ease 0s;
	width: 150px;
	height: 150px;
	transform: rotateX(0deg);
	background-color: #50753b;
	border-radius:10px;
	padding-top: 15px;
}
.content__transform-style:hover {
	transform: rotateX(60deg);
}

/*
Backface-visibility
Відображення зворотного боку об'єкта.

backface-visibility: visible; за замовченням

*/

/* Flip */
.flip {
	perspective: 500px;
	transform-style: preserve-3d;
}
.flip__body {
	position: absolute;
	width: 150px;
	height: 150px;
	transition: all 0.8s ease 0s;
	transform-style: preserve-3d;
}
.flip__front,
.flip__back {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	display: flex;
	justify-content: center;
	align-items: center;
}

.flip__front {
	z-index: 2;
	transform: rotateY(0deg);
	background-color: #49266d;
	backface-visibility: hidden;
}
.flip__back {
	transform: rotateY(-180deg);
	background-color: rgba(121, 79, 69, 0.5);
}
.flip:hover .flip__body {
	transform: rotateY(-180deg);
}

.button {
  display: inline-block;
  text-align: center;
  padding: 10px 30px;
  background-color: #4849a3;
  font-family: "Inter", sans-serif;
  font-style: normal;
  font-weight: 600;
  font-size: 16px;
  line-height: 1.5;
  color: #fff;
  border-radius: 30px;
  box-shadow: 0 3px 0 0 lightblue;
  position: relative;
  top: 0;
  transition: all 0.2s;
  max-width: 570px;
  margin-bottom: 15px;
}

.button:hover {
  top: 3px;
  box-shadow: 0 3px 0 0 lightskyblue;
  box-shadow: 0px 0px 20px 0px #3056d3;
}
 .button:active {
  color: red;
}
